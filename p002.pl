
#
# Problem 2:
#
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# Find the sum of all the even-valued terms in the sequence which do not exceed
# four million.
# 


#------------------------------------------------------------
# Naive approach


# Define the last value of the range, inclusive.
$last = 4000000;

# This will hold the resulting sum.
$sum = 0;

# These are the two Fibonacci numbers.
$a = 1, $b = 1;

# Iterate through the Fibonacci sequence.
while ($b <= $last) {
	# Add the even numbers to the sum.
	$sum += $b if ($b % 2 == 0);

	# Move to the next Fibonacci number.
	$new = $a + $b;
	$a = $b;
	$b = $new;
}

# Print the sum.
print "Sum: $sum\n";



#------------------------------------------------------------
# Faster approach



# Define the last value of the range, inclusive.
$last = 4000000;

# This will hold the resulting sum.
$sum = 2;

# These are the two Fibonacci numbers.
$a = 2, $b = 8;

# Iterate through the Fibonacci sequence.
while ($b <= $last) {
	# Add the number to the sum.
	$sum += $b;

	# Move to the next Fibonacci number.
	$new = 4 * $b + $a;
	$a = $b;
	$b = $new;
}

# Print the sum.
print "Sum: $sum\n";

